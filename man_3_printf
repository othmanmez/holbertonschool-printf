% _PRINTF(3)    Library Functions Manual    _PRINTF(3)

NAME
       _printf - a simplified version of printf that prints formatted output

SYNOPSIS
       int _printf(const char *format, ...);

DESCRIPTION
       The _printf function is a simplified version of the standard printf function. It prints formatted output to the standard output (stdout). The function processes the format string and outputs the corresponding values, handling the following conversion specifiers:
       
       - 'c' : prints a single character.
       - 's' : prints a string of characters.
       - '%%' : prints a literal '%' character.

       Any other characters in the format string are printed as they are.

       The function uses variable arguments, allowing the user to provide a variable number of inputs, depending on the format string.

       _printf does not support flag characters, field width, precision, or length modifiers. It only supports the basic format specifiers listed above.

PARAMETERS
       format  A string containing zero or more format specifiers. The string may contain the following:
           - 'c' for character output.
           - 's' for string output.
           - '%%' for printing a literal '%' character.

       The function can take additional arguments depending on the format specifiers in the format string.

RETURN VALUE
       On success, _printf returns the total number of characters printed (excluding the null byte used to end output to strings). If no characters are printed, the function returns 0.

EXAMPLES
       Example 1:
           _printf("Hello, %s!\n", "world");
           Output: "Hello, world!"
       
       Example 2:
           _printf("Character: %c\n", 'A');
           Output: "Character: A"

       Example 3:
           _printf("Printing a percentage sign: %%\n");
           Output: "Printing a percentage sign: %"

SEE ALSO
       printf(3), write(2), va_start(3), va_end(3)


